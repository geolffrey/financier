{
    "project": {},
    "files": {
        "risk.js": {
            "name": "risk.js",
            "modules": {},
            "classes": {
                "Stock": 1,
                "Portfolio": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Stock": {
            "name": "Stock",
            "shortname": "Stock",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "risk.js",
            "line": 6,
            "description": "Stock Object - Used to calculate returns and averages for individual stocks.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "ticker",
                    "description": "- Assigns the ticker symbol for the stock.",
                    "type": "String"
                }
            ]
        },
        "Portfolio": {
            "name": "Portfolio",
            "shortname": "Portfolio",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "risk.js",
            "line": 74,
            "description": "Portfolio Object - Keeps data on a portfolio and has methods to calculate\nattributes of the portfolio.",
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "risk.js",
            "line": 14,
            "description": "Stock's ticker symbol.",
            "itemtype": "property",
            "name": "ticker",
            "type": "String",
            "class": "Stock"
        },
        {
            "file": "risk.js",
            "line": 22,
            "description": "Array of tick returns.",
            "itemtype": "property",
            "name": "returns",
            "type": "Array",
            "class": "Stock"
        },
        {
            "file": "risk.js",
            "line": 30,
            "description": "Average of all tick returns.",
            "itemtype": "property",
            "name": "average",
            "type": "Float",
            "class": "Stock"
        },
        {
            "file": "risk.js",
            "line": 41,
            "description": "Add a tick of data to the stock's history.  This new return is stored in\nthe `returns` property for the stock.  Default behaviour immediately\nrecalculates the overall average on returns.",
            "params": [
                {
                    "name": "open",
                    "description": "- Tick opening price.",
                    "type": "Float"
                },
                {
                    "name": "close",
                    "description": "- Tick closing price.",
                    "type": "Float"
                },
                {
                    "name": "wait",
                    "description": "- Optional.  If true, do not calculate average.",
                    "type": "Boolean"
                }
            ],
            "class": "Stock"
        },
        {
            "file": "risk.js",
            "line": 57,
            "description": "Calculate average of all the returns.  This new average is stored in the\n`average` property for the stock.",
            "return": {
                "description": "Newly calculated average.",
                "type": "Float"
            },
            "class": "Stock"
        },
        {
            "file": "risk.js",
            "line": 82,
            "description": "Stocks included in the portfolio.",
            "itemtype": "property",
            "name": "stocks",
            "type": "Object",
            "class": "Portfolio"
        },
        {
            "file": "risk.js",
            "line": 90,
            "description": "Total market value for the stock.",
            "itemtype": "property",
            "name": "value",
            "type": "Float",
            "class": "Portfolio"
        },
        {
            "file": "risk.js",
            "line": 98,
            "description": "Risk for the entire portfolio.",
            "itemtype": "property",
            "name": "risk",
            "type": "Float",
            "class": "Portfolio"
        },
        {
            "file": "risk.js",
            "line": 106,
            "description": "Cache of portfolio securities.",
            "itemtype": "property",
            "name": "cache",
            "type": "String",
            "class": "Portfolio"
        },
        {
            "file": "risk.js",
            "line": 117,
            "description": "Add a stock to the portfolio.  This stock is stored in the `stocks` property\nfor the portfolio.  Relative weights for the entire portfolio are automagially\nrecalculated.\n\nIMPORTANT: If stocks are reused in multiple portfolios, they MUST be cloned to\nprevent discrepencies with how JavaScript passes objects by reference.",
            "params": [
                {
                    "name": "stock",
                    "description": "- Stock to add to portfolio.",
                    "type": "Stock"
                },
                {
                    "name": "value",
                    "description": "- Market value of the stock.  Currency must be consistent.",
                    "type": "Float"
                },
                {
                    "name": "clone",
                    "description": "- Optional.  If true, clone the stock object.",
                    "type": "Boolean"
                }
            ],
            "class": "Portfolio"
        },
        {
            "file": "risk.js",
            "line": 145,
            "description": "Remove a stock from the portfolio.  The `stocks` property for the portfolio is\nupdated.  Additionally, weights for all stocks are recalculated.",
            "params": [
                {
                    "name": "stock",
                    "description": "- Stock to be removed.",
                    "type": "Stock|String"
                }
            ],
            "class": "Portfolio"
        },
        {
            "file": "risk.js",
            "line": 157,
            "description": "Update a stock with a new market value.  The value is not validated.  Stocks\nare not deleted if the value is 0 or negative.  Weights for all stocks are\nrecalculated.",
            "params": [
                {
                    "name": "stock",
                    "description": "- Stock to be updated.",
                    "type": "Stock|String"
                },
                {
                    "name": "value",
                    "description": "- Updated market value.",
                    "type": "Float"
                }
            ],
            "class": "Portfolio"
        },
        {
            "file": "risk.js",
            "line": 171,
            "description": "Get the tickers for all stocks in the portfolio.",
            "return": {
                "description": "List of tickers of stocks in the portfolio.",
                "type": "Array"
            },
            "class": "Portfolio"
        },
        {
            "file": "risk.js",
            "line": 180,
            "description": "Checks if the stock is currently in the portfolio.",
            "params": [
                {
                    "name": "stock",
                    "description": "- Stock to be checked.",
                    "type": "Stock|String"
                }
            ],
            "return": {
                "description": "Whether stock is in the portfolio or not.",
                "type": "Boolean"
            },
            "class": "Portfolio"
        },
        {
            "file": "risk.js",
            "line": 191,
            "description": "Calculates the total market value of the portfolio.",
            "return": {
                "description": "Total market value.",
                "type": "Float"
            },
            "class": "Portfolio"
        },
        {
            "file": "risk.js",
            "line": 208,
            "description": "Calculate weights of all securities in the portfolio.",
            "class": "Portfolio"
        },
        {
            "file": "risk.js",
            "line": 222,
            "description": "Calculate covariance between two stocks.",
            "params": [
                {
                    "name": "stockA",
                    "description": "- First stock to compare.",
                    "type": "Stock"
                },
                {
                    "name": "stockB",
                    "description": "- Second stock to compare.",
                    "type": "Stock"
                }
            ],
            "return": {
                "description": "Covariance between the two stocks.",
                "type": "Float"
            },
            "class": "Portfolio"
        },
        {
            "file": "risk.js",
            "line": 242,
            "description": "Creates matrix of security weights.  We don't use a Sylvester Vector object\nbecause it does not have a transpose method.",
            "return": {
                "description": "Matrix of security weights.",
                "type": "Matrix"
            },
            "class": "Portfolio"
        },
        {
            "file": "risk.js",
            "line": 260,
            "description": "Create the covariance matrix of all securities.",
            "return": {
                "description": "Covariance matrix of all securities.",
                "type": "Matrix"
            },
            "class": "Portfolio"
        },
        {
            "file": "risk.js",
            "line": 284,
            "description": "Calculate risk for the entire portfolio.  We first check against the\ncache to ensure we're not doing unnecessary work (e.g. Stock weights\nremain unchanged).  Cache and risk are then updated.",
            "return": {
                "description": "Risk of the entire portfolio.",
                "type": "Float"
            },
            "class": "Portfolio"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nAdd a tick of data to the stock's history.  This new return is stored in\nthe `returns` property for the stock.  Default behaviour immediately\nrecalculates the overall average on returns.",
            "line": " risk.js:41"
        },
        {
            "message": "Missing item type\nCalculate average of all the returns.  This new average is stored in the\n`average` property for the stock.",
            "line": " risk.js:57"
        },
        {
            "message": "Missing item type\nAdd a stock to the portfolio.  This stock is stored in the `stocks` property\nfor the portfolio.  Relative weights for the entire portfolio are automagially\nrecalculated.\n\nIMPORTANT: If stocks are reused in multiple portfolios, they MUST be cloned to\nprevent discrepencies with how JavaScript passes objects by reference.",
            "line": " risk.js:117"
        },
        {
            "message": "Missing item type\nRemove a stock from the portfolio.  The `stocks` property for the portfolio is\nupdated.  Additionally, weights for all stocks are recalculated.",
            "line": " risk.js:145"
        },
        {
            "message": "Missing item type\nUpdate a stock with a new market value.  The value is not validated.  Stocks\nare not deleted if the value is 0 or negative.  Weights for all stocks are\nrecalculated.",
            "line": " risk.js:157"
        },
        {
            "message": "Missing item type\nGet the tickers for all stocks in the portfolio.",
            "line": " risk.js:171"
        },
        {
            "message": "Missing item type\nChecks if the stock is currently in the portfolio.",
            "line": " risk.js:180"
        },
        {
            "message": "Missing item type\nCalculates the total market value of the portfolio.",
            "line": " risk.js:191"
        },
        {
            "message": "Missing item type\nCalculate weights of all securities in the portfolio.",
            "line": " risk.js:208"
        },
        {
            "message": "Missing item type\nCalculate covariance between two stocks.",
            "line": " risk.js:222"
        },
        {
            "message": "Missing item type\nCreates matrix of security weights.  We don't use a Sylvester Vector object\nbecause it does not have a transpose method.",
            "line": " risk.js:242"
        },
        {
            "message": "Missing item type\nCreate the covariance matrix of all securities.",
            "line": " risk.js:260"
        },
        {
            "message": "Missing item type\nCalculate risk for the entire portfolio.  We first check against the\ncache to ensure we're not doing unnecessary work (e.g. Stock weights\nremain unchanged).  Cache and risk are then updated.",
            "line": " risk.js:284"
        }
    ]
}